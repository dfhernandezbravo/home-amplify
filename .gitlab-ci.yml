include:
  - project: cencosud-ds/cencommerce/utils/pipe-templates
    ref: master
    file: deploy-to-k8s.yml
stages:
  - init
  - test
  - check
  - build
  - package
  - sast
  - validate-jira
  - deploy
  - dast
  - compliance-jira
  - result-security

variables:
  BUILD_IMAGE_EXTRA_ARGS: '--build-arg --build-arg NEW_RELIC_APP_NAME_TEST=$NEW_RELIC_APP_NAME_TEST --build-arg NEW_RELIC_LICENSE_KEY=$NEW_RELIC_LICENSE_KEY --build-arg APPLICATION_NAME=$APPLICATION_NAME --build-arg NEXT_PUBLIC_CMS_URL=$NEXT_PUBLIC_CMS_URL'

staging:
  stage: deploy
  allow_failure: true

.install_dependencies: &install_dependencies
  stage: init
  image: registry.gitlab.com/cencosud-ds/cencommerce/utils/docker-images/node:16.18.0-alpine3.16
  script:
    - NODE_ENV=  yarn install # install dependencies
  artifacts:
    paths:
      - node_modules/
    expire_in: 30 minutes
  tags:
    - private
    - ccom
    - staging

.lint: &lint
  stage: test
  image: registry.gitlab.com/cencosud-ds/cencommerce/utils/docker-images/node:16.18.0-alpine3.16
  script:
    - yarn run lint
  tags:
    - private
    - ccom
    - staging

######JOB: INSTALLL
install dependencies:
  <<: *install_dependencies

######JOB: Linter
linter:
  <<: *lint
  dependencies:
    - install dependencies

#pkg:staging:
#  stage: package
#  extends: .docker
#  needs:
#    - job: pkg:container
#  environment:
#    name: staging
#  rules:
#    - if: $CI_COMMIT_BRANCH != "master"
#  variables:
#    BUILD_IMAGE_EXTRA_ARGS:
#      '--build-arg --build-arg NEW_RELIC_APP_NAME_TEST=$NEW_RELIC_APP_NAME_TEST --build-arg NEW_RELIC_LICENSE_KEY=$NEW_RELIC_LICENSE_KEY --build-arg APPLICATION_NAME=$APPLICATION_NAME'

